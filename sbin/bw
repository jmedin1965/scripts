#!/bin/bash

main()
{
    bw="/usr/local/scripts/bin/bw"
    tmp="$( /usr/bin/readlink -f "$HOME/.ssh/tmp" )"
    pinentry="$(pinentry)"
    #DEBUG="1"

    if [ -x "$bw" ]
    then
        if [ "$1" != login ]
        then
            check_and_unlock
        fi

        "$bw" "$@"
    else
        err "unable for find real bw application, exiting."
    fi
}

pinentry()
{
    if /usr/bin/xhost > /dev/null 2>&1
    then
        [ -x "/usr/bin/pinentry-x11" ]   && echo "/usr/bin/pinentry-x11"   && return
        [ -x "/usr/bin/pinentry-gtk-2" ] && echo "/usr/bin/pinentry-gtk-2" && return
    fi
    [ -x "/usr/bin/pinentry-curses" ] && echo "/usr/bin/pinentry-curses" && return
    [ -x "/usr/bin/pinentry" ]        && echo "/usr/bin/pinentry"        && return
    err "Unable to find pinenrty, is it installed?"
}

err()
{
    if [ -x "$pinentry" ]
    then
        local tty="$(/usr/bin/tty)"
        echo -e "setdesc $*\nMESSAGE\n" | "$pinentry" -T "$tty"
    else
        echo "Error:" "$@" > /dev/stderr
    fi
    exit 1
}

info()
{
    [ -n "$DEBUG" ] && echo "Info:" "$@"
}

bw_locked()
{
    [ "$("$bw" unlock --check | /usr/bin/fgrep --count "Vault is unlocked!")" == 0 ]
}

bw_unlock()
{
    local ev="0"
    info "try to unlock by user input."

    if [ -x "$pinentry" ]
    then
        info "try pinentry"

        # REF: https://unix.stackexchange.com/questions/702683/how-to-call-pinentry-from-bash-script
        local setdesc="unlock BitWarden CLI - BW"
        local setprompt="Enter Master Password:"
        local tty="$(/usr/bin/tty)"

        BW_PASSWORD="$(echo -e "setdesc $setdesc\nsetprompt $setprompt\nGETPIN\n" | "$pinentry" -T "$tty" | /usr/bin/grep "^D ")"
        BW_PASSWORD=${BW_PASSWORD#D }

        info "Password is in: BW_PASSWORD"

        unset BW_SESSION
        export BW_PASSWORD
        BW_SESSION="$("$bw" unlock --raw --passwordenv BW_PASSWORD 2>&1)"
        ev="$?"
    else
        err "no pinentry program found, please install one"
    fi

    if [ $ev == 0 ] 
    then
        unset BW_PASSWORD
        export BW_SESSION
        info got BW_SESSION=$BW_SESSION
        echo -n "$BW_SESSION" > "${tmp}/bw"
    else
        unset BW_PASSWORD
        err "unlock failed."
        if [ "$BW_SESSION" == "You are not logged in." ]
        then
            err "You are not logged in, please log in first manually."
        fi
        exit 1
    fi
}

check_and_unlock()
{
    if "$bw" unlock --check > /dev/null 2>&1
    then
        info "bw is unlocked."
        [ -n "$BW_SESSION" ] && echo -n "$BW_SESSION" > "${tmp}/bw"

    elif tmp_is_tmpfs
    then
        info "yes tmp uis a tmpfs."
        if [ -e "${tmp}/bw" ]
        then
            info "${tmp}/bw: try to use this session key."
            export BW_SESSION="$(<${tmp}/bw)"
            if "$bw" unlock --check > /dev/null 2>&1
            then
                info "unlocked by ${tmp}/bw."
            else
                info "unlock by ${tmp}/bw failed."
                /bin/rm -f "${tmp}/bw"
                bw_unlock
            fi
        else
            info "${tmp}/bw: no saved session key found."
            bw_unlock
        fi
    else
        err "${tmp}: not a mounted tmpfs."
    fi
}

tmp_is_tmpfs()
{
    set -- $(/bin/mount | /usr/bin/fgrep " $tmp ")
    [ "$5" == tmpfs ]
}

main "$@"


