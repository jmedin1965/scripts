#!/bin/bash

#
# Called by including the following line
#
# source "$(/usr/bin/dirname "$0")/functions.sh"

# sha1sum <file> - return only the sha1sum of a file
#
sha1sum()
{
        if [ $# != 0 ]
        then
                set -- $(/usr/bin/sha1sum "$1")
                echo $1
        fi
}

# auto_generated_msg_start - echo a standard auto-generated message
#
auto_generated_msg_start()
{
	echo "#
# Auto generated
#   by:  $(/usr/bin/readlink -f "$0")
#
# Please do not edit this file directly
#
"
}

# patch <from> <to> <file> - patch a file
#
# from - regex pattern. File will be patched if it contains this pattern
# to   - if from matches, it will be replaces by this string
# file - file to patch
#
patch()
{
	local from="$1"
	local to="$2"
	local file="$3"

	local num

	(( patch_count++ ))

	if [ -e "$file" ]
	then
		echo "$file: file exists, checking for pattern \"$from\"...."
	else
		echo "$file: file does not exist"
		return 1
	fi

	num="$(/bin/grep -c -e "$from" "$file")"

	if [ "$num" -gt 0 ]
	then
		(( patch_yes++ ))
		echo "  pattern matched $num times, patching....."

		/bin/sed -i.bak -e "s/$from/$to/g" "$file"
		if [ $? == 0 ]
		then
			echo "  patch suceeded, created backup file $file.bak"

			# if patch applied, return 0
			return 0
		else
			(( patch_fail++ ))
			echo "  patch failed."
		fi
	else
		echo "  no match, skipping patch."
		(( patch_no++ ))
	fi
	
	# if patch not applied return 1
	return 1
}

# patch_start - zero patch counters
#
patch_start()
{
	patch_count="0"
	patch_yes="0"
	patch_no="0"
	patch_fail="0"
}

# patch_end - display patch statistics stored in patch counters
#
patch_end()
{
	echo "patched $patch_yes pattern(s) of $patch_count total, with $patch_fail failure(s)."

	return $(( patch_yes + patch_fail ))
}

